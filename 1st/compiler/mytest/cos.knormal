LetRec
	name : 
		(fequal : Int -> Int -> Bool)
	args : 
		[(e1 : Int), (e2 : Int)]
	body : 
		IfEq
			e1
			e2
			Int 1
			Int 0
	LetRec
		name : 
			(fless : Int -> Int -> Bool)
		args : 
			[(e1 : Int), (e2 : Int)]
		body : 
			IfLE
				e2
				e1
				Int 0
				Int 1
		LetRec
			name : 
				(fispos : Float -> Bool)
			args : 
				[(x : Float)]
			body : 
				Let
					(Td172 : Float)
					Float 0.
					IfLE
						x
						Td172
						Int 0
						Int 1
			LetRec
				name : 
					(fisneg : Float -> Bool)
				args : 
					[(x : Float)]
				body : 
					Let
						(Td171 : Float)
						Float 0.
						IfLE
							Td171
							x
							Int 0
							Int 1
				LetRec
					name : 
						(fiszero : Float -> Bool)
					args : 
						[(x : Float)]
					body : 
						Let
							(Td170 : Float)
							Float 0.
							IfEq
								x
								Td170
								Int 1
								Int 0
					LetRec
						name : 
							(xor : Bool -> Bool -> Bool)
						args : 
							[(x : Bool), (y : Bool)]
						body : 
							Let
								(Ti168 : Int)
								Int 0
								IfEq
									x
									Ti168
									Var y
									Let
										(Ti169 : Int)
										Int 0
										IfEq
											y
											Ti169
											Int 1
											Int 0
						LetRec
							name : 
								(fhalf : Float -> Float)
							args : 
								[(x : Float)]
							body : 
								Let
									(Td167 : Float)
									Float 0.5
									FMul
										x
										Td167
							LetRec
								name : 
									(fsqr : Float -> Float)
								args : 
									[(x : Float)]
								body : 
									FMul
										x
										x
								LetRec
									name : 
										(int_of_float_sub1 : Float -> Int -> Int)
									args : 
										[(x : Float), (n : Int)]
									body : 
										Let
											(Td162 : Float)
											Float 8388608.
											IfLE
												Td162
												x
												Let
													(Td164 : Float)
													Let
														(Td163 : Float)
														Float 8388608.
														FSub
															x
															Td163
													Let
														(Ti166 : Int)
														Let
															(Ti165 : Int)
															Int 1
															Add
																n
																Ti165
														App
															int_of_float_sub1
															[Td164, Ti166]
												Var n
									LetRec
										name : 
											(int_of_float_sub2 : Float -> Float)
										args : 
											[(x : Float)]
										body : 
											Let
												(Td159 : Float)
												Float 8388608.
												IfLE
													Td159
													x
													Let
														(Td161 : Float)
														Let
															(Td160 : Float)
															Float 8388608.
															FSub
																x
																Td160
														App
															int_of_float_sub2
															[Td161]
													Var x
										LetRec
											name : 
												(int_of_float_sub3 : Int -> Int -> Int)
											args : 
												[(m : Int), (acm : Int)]
											body : 
												Let
													(Ti154 : Int)
													Int 0
													IfEq
														m
														Ti154
														Var acm
														Let
															(Ti156 : Int)
															Let
																(Ti155 : Int)
																Int 1
																Sub
																	m
																	Ti155
															Let
																(Ti158 : Int)
																Let
																	(Ti157 : Int)
																	Int 8388608
																	Add
																		Ti157
																		acm
																App
																	int_of_float_sub3
																	[Ti156, Ti158]
											LetRec
												name : 
													(int_of_float : Float -> Int)
												args : 
													[(x : Float)]
												body : 
													Let
														(flag : Bool)
														Let
															(Td137 : Float)
															Float 0.
															IfLE
																Td137
																x
																Int 1
																Int 0
														Let
															(x_abs : Float)
															ExtFunApp
																fabs
																[x]
															Let
																(res : Int)
																Let
																	(Td138 : Float)
																	Float 8388608.
																	IfLE
																		Td138
																		x_abs
																		Let
																			(Ti144 : Int)
																			Let
																				(Ti142 : Int)
																				Let
																					(Td141 : Float)
																					Let
																						(Td139 : Float)
																						App
																							int_of_float_sub2
																							[x_abs]
																						Let
																							(Td140 : Float)
																							Float 8388608.
																							FAdd
																								Td139
																								Td140
																					ExtFunApp
																						ftoi
																						[Td141]
																				Let
																					(Ti143 : Int)
																					Int 1258291200
																					Sub
																						Ti142
																						Ti143
																			Let
																				(Ti148 : Int)
																				Let
																					(Ti146 : Int)
																					Let
																						(Ti145 : Int)
																						Int 0
																						App
																							int_of_float_sub1
																							[x_abs, Ti145]
																					Let
																						(Ti147 : Int)
																						Int 0
																						App
																							int_of_float_sub3
																							[Ti146, Ti147]
																				Add
																					Ti144
																					Ti148
																		Let
																			(Ti151 : Int)
																			Let
																				(Td150 : Float)
																				Let
																					(Td149 : Float)
																					Float 8388608.
																					FAdd
																						x_abs
																						Td149
																				ExtFunApp
																					ftoi
																					[Td150]
																			Let
																				(Ti152 : Int)
																				Int 1258291200
																				Sub
																					Ti151
																					Ti152
																Let
																	(Ti153 : Int)
																	Int 0
																	IfEq
																		flag
																		Ti153
																		Neg
																			res
																		Var res
												LetRec
													name : 
														(float_of_int_sub1 : Int -> Int -> Int)
													args : 
														[(x : Int), (n : Int)]
													body : 
														Let
															(Ti132 : Int)
															Int 8388608
															IfLE
																Ti132
																x
																Let
																	(Ti134 : Int)
																	Let
																		(Ti133 : Int)
																		Int 8388608
																		Sub
																			x
																			Ti133
																	Let
																		(Ti136 : Int)
																		Let
																			(Ti135 : Int)
																			Int 1
																			Add
																				n
																				Ti135
																		App
																			float_of_int_sub1
																			[Ti134, Ti136]
																Var n
													LetRec
														name : 
															(float_of_int_sub2 : Int -> Int)
														args : 
															[(x : Int)]
														body : 
															Let
																(Ti129 : Int)
																Int 8388608
																IfLE
																	Ti129
																	x
																	Let
																		(Ti131 : Int)
																		Let
																			(Ti130 : Int)
																			Int 8388608
																			Sub
																				x
																				Ti130
																		App
																			float_of_int_sub2
																			[Ti131]
																	Var x
														LetRec
															name : 
																(float_of_int_sub3 : Int -> Float -> Float)
															args : 
																[(m : Int), (acm : Float)]
															body : 
																Let
																	(Ti124 : Int)
																	Int 0
																	IfEq
																		m
																		Ti124
																		Var acm
																		Let
																			(Ti126 : Int)
																			Let
																				(Ti125 : Int)
																				Int 1
																				Sub
																					m
																					Ti125
																			Let
																				(Td128 : Float)
																				Let
																					(Td127 : Float)
																					Float 8388608.
																					FAdd
																						Td127
																						acm
																				App
																					float_of_int_sub3
																					[Ti126, Td128]
															LetRec
																name : 
																	(float_of_int : Int -> Float)
																args : 
																	[(x : Int)]
																body : 
																	Let
																		(flag : Bool)
																		Let
																			(Ti106 : Int)
																			Int 0
																			IfLE
																				x
																				Ti106
																				Int 0
																				Int 1
																		Let
																			(x_abs : Int)
																			Let
																				(Ti107 : Int)
																				Int 0
																				IfLE
																					Ti107
																					x
																					Var x
																					Neg
																						x
																			Let
																				(res : Float)
																				Let
																					(Ti108 : Int)
																					Int 8388608
																					IfLE
																						Ti108
																						x_abs
																						Let
																							(Td114 : Float)
																							Let
																								(Td112 : Float)
																								Let
																									(Ti111 : Int)
																									Let
																										(Ti109 : Int)
																										App
																											float_of_int_sub2
																											[x_abs]
																										Let
																											(Ti110 : Int)
																											Int 1258291200
																											Add
																												Ti109
																												Ti110
																									ExtFunApp
																										itof
																										[Ti111]
																								Let
																									(Td113 : Float)
																									Float 8388608.
																									FSub
																										Td112
																										Td113
																							Let
																								(Td118 : Float)
																								Let
																									(Ti116 : Int)
																									Let
																										(Ti115 : Int)
																										Int 0
																										App
																											float_of_int_sub1
																											[x_abs, Ti115]
																									Let
																										(Td117 : Float)
																										Float 0.
																										App
																											float_of_int_sub3
																											[Ti116, Td117]
																								FAdd
																									Td114
																									Td118
																						Let
																							(Td121 : Float)
																							Let
																								(Ti120 : Int)
																								Let
																									(Ti119 : Int)
																									Int 1258291200
																									Add
																										x_abs
																										Ti119
																								ExtFunApp
																									itof
																									[Ti120]
																							Let
																								(Td122 : Float)
																								Float 8388608.
																								FSub
																									Td121
																									Td122
																				Let
																					(Ti123 : Int)
																					Int 0
																					IfEq
																						flag
																						Ti123
																						ExtFunApp
																							fneg
																							[res]
																						Var res
																LetRec
																	name : 
																		(floor : Float -> Float)
																	args : 
																		[(x : Float)]
																	body : 
																		Let
																			(flag : Bool)
																			Let
																				(Td101 : Float)
																				Float 0.
																				IfLE
																					Td101
																					x
																					Int 1
																					Int 0
																			Let
																				(x_abs : Float)
																				ExtFunApp
																					fabs
																					[x]
																				Let
																					(res : Float)
																					Let
																						(Td102 : Float)
																						Float 8388608.
																						IfLE
																							Td102
																							x_abs
																							Var x_abs
																							Let
																								(Ti103 : Int)
																								App
																									int_of_float
																									[x_abs]
																								App
																									float_of_int
																									[Ti103]
																					Let
																						(res_ : Float)
																						Let
																							(Ti104 : Int)
																							Int 0
																							IfEq
																								flag
																								Ti104
																								ExtFunApp
																									fneg
																									[res]
																								Var res
																						IfLE
																							res_
																							x
																							Var res_
																							Let
																								(Td105 : Float)
																								Float 1.
																								FSub
																									res_
																									Td105
																	LetRec
																		name : 
																			(kernel_sin : Float -> Float)
																		args : 
																			[(x : Float)]
																		body : 
																			Let
																				(x2 : Float)
																				FMul
																					x
																					x
																				Let
																					(x4 : Float)
																					FMul
																						x2
																						x2
																					Let
																						(Td96 : Float)
																						Let
																							(Td92 : Float)
																							Let
																								(Td91 : Float)
																								Let
																									(Td90 : Float)
																									Let
																										(Td89 : Float)
																										Float 0.16666668
																										FMul
																											Td89
																											x
																									FMul
																										Td90
																										x2
																								FSub
																									x
																									Td91
																							Let
																								(Td95 : Float)
																								Let
																									(Td94 : Float)
																									Let
																										(Td93 : Float)
																										Float 0.008332824
																										FMul
																											Td93
																											x
																									FMul
																										Td94
																										x4
																								FAdd
																									Td92
																									Td95
																						Let
																							(Td100 : Float)
																							Let
																								(Td99 : Float)
																								Let
																									(Td98 : Float)
																									Let
																										(Td97 : Float)
																										Float 0.00019587841
																										FMul
																											Td97
																											x
																									FMul
																										Td98
																										x2
																								FMul
																									Td99
																									x4
																							FSub
																								Td96
																								Td100
																		LetRec
																			name : 
																				(kernel_cos : Float -> Float)
																			args : 
																				[(x : Float)]
																			body : 
																				Let
																					(x2 : Float)
																					FMul
																						x
																						x
																					Let
																						(x4 : Float)
																						FMul
																							x2
																							x2
																						Let
																							(Td85 : Float)
																							Let
																								(Td82 : Float)
																								Let
																									(Td79 : Float)
																									Float 1.
																									Let
																										(Td81 : Float)
																										Let
																											(Td80 : Float)
																											Float 0.5
																											FMul
																												Td80
																												x2
																										FSub
																											Td79
																											Td81
																								Let
																									(Td84 : Float)
																									Let
																										(Td83 : Float)
																										Float 0.04166368
																										FMul
																											Td83
																											x4
																									FAdd
																										Td82
																										Td84
																							Let
																								(Td88 : Float)
																								Let
																									(Td87 : Float)
																									Let
																										(Td86 : Float)
																										Float 0.0013695068
																										FMul
																											Td86
																											x2
																									FMul
																										Td87
																										x4
																								FSub
																									Td85
																									Td88
																			LetRec
																				name : 
																					(kernel_atan : Float -> Float)
																				args : 
																					[(x : Float)]
																				body : 
																					Let
																						(x2 : Float)
																						FMul
																							x
																							x
																						Let
																							(x4 : Float)
																							FMul
																								x2
																								x2
																							Let
																								(x8 : Float)
																								FMul
																									x4
																									x4
																								Let
																									(Td74 : Float)
																									Let
																										(Td69 : Float)
																										Let
																											(Td65 : Float)
																											Let
																												(Td60 : Float)
																												Let
																													(Td56 : Float)
																													Let
																														(Td55 : Float)
																														Let
																															(Td54 : Float)
																															Let
																																(Td53 : Float)
																																Float 0.3333333
																																FMul
																																	Td53
																																	x
																															FMul
																																Td54
																																x2
																														FSub
																															x
																															Td55
																													Let
																														(Td59 : Float)
																														Let
																															(Td58 : Float)
																															Let
																																(Td57 : Float)
																																Float 0.2
																																FMul
																																	Td57
																																	x
																															FMul
																																Td58
																																x4
																														FAdd
																															Td56
																															Td59
																												Let
																													(Td64 : Float)
																													Let
																														(Td63 : Float)
																														Let
																															(Td62 : Float)
																															Let
																																(Td61 : Float)
																																Float 0.142857142
																																FMul
																																	Td61
																																	x
																															FMul
																																Td62
																																x2
																														FMul
																															Td63
																															x4
																													FSub
																														Td60
																														Td64
																											Let
																												(Td68 : Float)
																												Let
																													(Td67 : Float)
																													Let
																														(Td66 : Float)
																														Float 0.111111104
																														FMul
																															Td66
																															x
																													FMul
																														Td67
																														x8
																												FAdd
																													Td65
																													Td68
																										Let
																											(Td73 : Float)
																											Let
																												(Td72 : Float)
																												Let
																													(Td71 : Float)
																													Let
																														(Td70 : Float)
																														Float 0.08976446
																														FMul
																															Td70
																															x
																													FMul
																														Td71
																														x2
																												FMul
																													Td72
																													x8
																											FSub
																												Td69
																												Td73
																									Let
																										(Td78 : Float)
																										Let
																											(Td77 : Float)
																											Let
																												(Td76 : Float)
																												Let
																													(Td75 : Float)
																													Float 0.060035485
																													FMul
																														Td75
																														x
																												FMul
																													Td76
																													x4
																											FMul
																												Td77
																												x8
																										FAdd
																											Td74
																											Td78
																				LetRec
																					name : 
																						(reduction_2pi : Float -> Float)
																					args : 
																						[(x : Float)]
																					body : 
																						Let
																							(pi : Float)
																							Float 3.14159265359
																							Let
																								(pi2 : Float)
																								Let
																									(Td45 : Float)
																									Float 2.
																									FMul
																										Td45
																										pi
																								LetRec
																									name : 
																										(f : Float -> Float -> Float)
																									args : 
																										[(s : Float), (t : Float)]
																									body : 
																										IfLE
																											t
																											s
																											Let
																												(Td52 : Float)
																												Let
																													(Td51 : Float)
																													Float 2.
																													FMul
																														Td51
																														t
																												App
																													f
																													[s, Td52]
																											Var t
																									Let
																										(p : Float)
																										App
																											f
																											[x, pi2]
																										LetRec
																											name : 
																												(g : Float -> Float -> Float)
																											args : 
																												[(s : Float), (t : Float)]
																											body : 
																												IfLE
																													pi2
																													s
																													IfLE
																														t
																														s
																														Let
																															(Td46 : Float)
																															FSub
																																s
																																t
																															Let
																																(Td48 : Float)
																																Let
																																	(Td47 : Float)
																																	Float 2.
																																	FDiv
																																		t
																																		Td47
																																App
																																	g
																																	[Td46, Td48]
																														Let
																															(Td50 : Float)
																															Let
																																(Td49 : Float)
																																Float 2.
																																FDiv
																																	t
																																	Td49
																															App
																																g
																																[s, Td50]
																													Var s
																											App
																												g
																												[x, p]
																					LetRec
																						name : 
																							(cos : Float -> Float)
																						args : 
																							[(x : Float)]
																						body : 
																							Let
																								(pi : Float)
																								Float 3.14159265359
																								Let
																									(flag : Bool)
																									Int 1
																									Let
																										(x : Float)
																										Let
																											(Td32 : Float)
																											ExtFunApp
																												fabs
																												[x]
																											App
																												reduction_2pi
																												[Td32]
																										Let
																											(flag : Bool)
																											IfLE
																												pi
																												x
																												Let
																													(Ti33 : Int)
																													Int 0
																													IfEq
																														flag
																														Ti33
																														Int 1
																														Int 0
																												Var flag
																											Let
																												(x : Float)
																												IfLE
																													pi
																													x
																													FSub
																														x
																														pi
																													Var x
																												Let
																													(flag : Bool)
																													Let
																														(Td35 : Float)
																														Let
																															(Td34 : Float)
																															Float 2.
																															FDiv
																																pi
																																Td34
																														IfLE
																															Td35
																															x
																															Let
																																(Ti36 : Int)
																																Int 0
																																IfEq
																																	flag
																																	Ti36
																																	Int 1
																																	Int 0
																															Var flag
																													Let
																														(x : Float)
																														Let
																															(Td38 : Float)
																															Let
																																(Td37 : Float)
																																Float 2.
																																FDiv
																																	pi
																																	Td37
																															IfLE
																																Td38
																																x
																																FSub
																																	pi
																																	x
																																Var x
																														Let
																															(res : Float)
																															Let
																																(Td40 : Float)
																																Let
																																	(Td39 : Float)
																																	Float 4.
																																	FDiv
																																		pi
																																		Td39
																																IfLE
																																	x
																																	Td40
																																	App
																																		kernel_cos
																																		[x]
																																	Let
																																		(Td43 : Float)
																																		Let
																																			(Td42 : Float)
																																			Let
																																				(Td41 : Float)
																																				Float 2.
																																				FDiv
																																					pi
																																					Td41
																																			FSub
																																				Td42
																																				x
																																		App
																																			kernel_sin
																																			[Td43]
																															Let
																																(Ti44 : Int)
																																Int 0
																																IfEq
																																	flag
																																	Ti44
																																	ExtFunApp
																																		fneg
																																		[res]
																																	Var res
																						LetRec
																							name : 
																								(sin : Float -> Float)
																							args : 
																								[(x : Float)]
																							body : 
																								Let
																									(pi : Float)
																									Float 3.14159265359
																									Let
																										(flag : Bool)
																										Let
																											(Td21 : Float)
																											Float 0.
																											IfLE
																												Td21
																												x
																												Int 1
																												Int 0
																										Let
																											(x : Float)
																											Let
																												(Td22 : Float)
																												ExtFunApp
																													fabs
																													[x]
																												App
																													reduction_2pi
																													[Td22]
																											Let
																												(flag : Bool)
																												IfLE
																													pi
																													x
																													Let
																														(Ti23 : Int)
																														Int 0
																														IfEq
																															flag
																															Ti23
																															Int 1
																															Int 0
																													Var flag
																												Let
																													(x : Float)
																													IfLE
																														pi
																														x
																														FSub
																															x
																															pi
																														Var x
																													Let
																														(x : Float)
																														Let
																															(Td25 : Float)
																															Let
																																(Td24 : Float)
																																Float 2.
																																FDiv
																																	pi
																																	Td24
																															IfLE
																																Td25
																																x
																																FSub
																																	pi
																																	x
																																Var x
																														Let
																															(res : Float)
																															Let
																																(Td27 : Float)
																																Let
																																	(Td26 : Float)
																																	Float 4.
																																	FDiv
																																		pi
																																		Td26
																																IfLE
																																	x
																																	Td27
																																	App
																																		kernel_sin
																																		[x]
																																	Let
																																		(Td30 : Float)
																																		Let
																																			(Td29 : Float)
																																			Let
																																				(Td28 : Float)
																																				Float 2.
																																				FDiv
																																					pi
																																					Td28
																																			FSub
																																				Td29
																																				x
																																		App
																																			kernel_cos
																																			[Td30]
																															Let
																																(Ti31 : Int)
																																Int 0
																																IfEq
																																	flag
																																	Ti31
																																	ExtFunApp
																																		fneg
																																		[res]
																																	Var res
																							LetRec
																								name : 
																									(atan : Float -> Float)
																								args : 
																									[(x : Float)]
																								body : 
																									Let
																										(pi : Float)
																										Float 3.14159265359
																										Let
																											(flag : Bool)
																											Let
																												(Td4 : Float)
																												Float 0.
																												IfLE
																													Td4
																													x
																													Int 1
																													Int 0
																											Let
																												(x_abs : Float)
																												ExtFunApp
																													fabs
																													[x]
																												Let
																													(Td5 : Float)
																													Float 0.4375
																													IfLE
																														Td5
																														x_abs
																														Let
																															(res : Float)
																															Let
																																(Td6 : Float)
																																Float 2.4375
																																IfLE
																																	Td6
																																	x_abs
																																	Let
																																		(Td8 : Float)
																																		Let
																																			(Td7 : Float)
																																			Float 2.
																																			FDiv
																																				pi
																																				Td7
																																		Let
																																			(Td11 : Float)
																																			Let
																																				(Td10 : Float)
																																				Let
																																					(Td9 : Float)
																																					Float 1.
																																					FDiv
																																						Td9
																																						x_abs
																																				App
																																					kernel_atan
																																					[Td10]
																																			FSub
																																				Td8
																																				Td11
																																	Let
																																		(Td13 : Float)
																																		Let
																																			(Td12 : Float)
																																			Float 4.
																																			FDiv
																																				pi
																																				Td12
																																		Let
																																			(Td19 : Float)
																																			Let
																																				(Td18 : Float)
																																				Let
																																					(Td15 : Float)
																																					Let
																																						(Td14 : Float)
																																						Float 1.
																																						FSub
																																							x_abs
																																							Td14
																																					Let
																																						(Td17 : Float)
																																						Let
																																							(Td16 : Float)
																																							Float 1.
																																							FAdd
																																								x_abs
																																								Td16
																																						FDiv
																																							Td15
																																							Td17
																																				App
																																					kernel_atan
																																					[Td18]
																																			FAdd
																																				Td13
																																				Td19
																															Let
																																(Ti20 : Int)
																																Int 0
																																IfEq
																																	flag
																																	Ti20
																																	ExtFunApp
																																		fneg
																																		[res]
																																	Var res
																														App
																															kernel_atan
																															[x]
																								LetRec
																									name : 
																										(rad : Float -> Float)
																									args : 
																										[(x : Float)]
																									body : 
																										Let
																											(Td3 : Float)
																											Float 0.017453293
																											FMul
																												x
																												Td3
																									Let
																										(v1 : Float)
																										Let
																											(Td2 : Float)
																											Let
																												(Tu1 : ())
																												()
																												ExtFunApp
																													read_float
																													[Tu1]
																											App
																												rad
																												[Td2]
																										Let
																											(cos_v1 : Float)
																											App
																												cos
																												[v1]
																											ExtFunApp
																												print_float
																												[cos_v1]
