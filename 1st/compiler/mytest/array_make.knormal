LetRec
	name : 
		(inprod : Float list -> Float list -> Int -> Float)
	args : 
		[(v1 : Float list), (v2 : Float list), (i : Int)]
	body : 
		Let
			(Ti7 : Int)
			Int 0
			IfLE
				Ti7
				i
				Let
					(Td10 : Float)
					Let
						(Td8 : Float)
						Get
							v1
							i
						Let
							(Td9 : Float)
							Get
								v2
								i
							FMul
								Td8
								Td9
					Let
						(Td13 : Float)
						Let
							(Ti12 : Int)
							Let
								(Ti11 : Int)
								Int 1
								Sub
									i
									Ti11
							App
								inprod
								[v1, v2, Ti12]
						FAdd
							Td10
							Td13
				Float 0.
	Let
		(v1 : Float list)
		Let
			(Ti1 : Int)
			Int 3
			Let
				(Td2 : Float)
				Float 1.23
				ExtFunApp
					create_float_array
					[Ti1, Td2]
		Let
			(v2 : Float list)
			Let
				(Ti3 : Int)
				Int 3
				Let
					(Td4 : Float)
					Float 4.56
					ExtFunApp
						create_float_array
						[Ti3, Td4]
			Let
				(Td6 : Float)
				Let
					(Ti5 : Int)
					Int 2
					App
						inprod
						[v1, v2, Ti5]
				ExtFunApp
					print_float
					[Td6]
