  Main:
 addi $sp, $sp, 4096
 000001 11101 11101 00010 00000 000000
 addi    $a0, $zero,1
 000001 00000 00100 00000 00000 000001
 jal	    Fibonacci
 100001 00000 00000 00000 00000 000100
 j	    Exit
 100000 00000 00000 00000 00000 011010

 Fibonacci:
 addi	$sp,	$sp,	-8	#shelter of registers
 000001 11101 11101 11111 11111 111000
 sw	    $a0,	4($sp)
 000110 11101 00100 00000 00000 000100
 sw	    $ra,	0($sp)
 000110 11101 11111 00000 00000 000000
 addi	$t0,	$zero,	1
 000001 00000 01000 00000 00000 000001
 blt    $t0,    $a0 ,   True
 100110 01000 00100 00000 0000 000010
  move	$v0,	$a0		#n<=1
 000000 00100 00000 00010 00000 100000
  j	    Return
 100000 00000 00000 00000 00000 010110

 True:
 addi	$a0,	$a0,	-1	#n>1
 000001 00100 00100 11111 11111 111111
   jal	    Fibonacci		#fibonacci(n-1)
 100001 00000 00000 00000 00000 000100
 addi	$sp,	$sp,	-4	#shelter of return value
 000001 11101 11101 11111 11111 111100
   sw	    $v0,	0($sp)
 000110 11101 00010 00000 00000 000000
   addi	$a0,	$a0,	-1
 000001 00100 00100 11111 11111 111111
   jal	    Fibonacci		#fibonacci(n-2)
 100001 00000 00000 00000 00000 000100
   lw	    $s0,	0($sp)		#restore of return value
 000101 11101 10000 00000 00000 000000
   addi	$sp,	$sp,	4
 000001 11101 11101 00000 00000 000100
   add	    $v0,	$v0,	$s0	#fibonacci(n-1) + fibonacci(n-2)
 000000 00010 10000 00010 00000 100000
    j	    Return
 100000 00000 00000 00000 00000 010110

 Return:
 lw	    $ra,	0($sp)		#shelter of registers
 000101 11101 11111 00000 00000 000000
 lw	    $a0,	4($sp)
 000101 11101 00100 00000 00000 000100
 addi	$sp,	$sp,	8
 000001 11101 11101 00000 00000 001000
  jr	    $ra
 100010 11111 00000 11111 00000 001000

 Exit:
 addi    $v0,    $v0,    0
 000001 00010 00010 00000 00000 000000
 Last:
 j      Last
 100000 00000 00000 00000 00000 011011

