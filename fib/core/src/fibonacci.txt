    Main:
0  addi $sp, $sp, 4096
   001000 11101 11101 00010 00000 000000
4  addi    $a0, $zero,1
   001000 00000 00100 00000 00000 000001
8  jal	    Fibonacci
   000011 00000 00000 00000 00000 000100
c  j	    Exit
   000010 00000 00000 00000 00000 011010

   Fibonacci:
10 addi	$sp,	$sp,	-8	#shelter of registers
   001000 11101 11101 11111 11111 111000
14 sw	    $a0,	4($sp)
   101011 11101 00100 00000 00000 000100
18 sw	    $ra,	0($sp)
   101011 11101 11111 00000 00000 000000
1c addi	$t0,	$zero,	1
   001000 00000 01000 00000 00000 000001
20	slt     $at,    $t0,    $a0
   000000 01000 00100 00001 00000 101010
24  bne     $at,	$zero,	True
   000101 00001 00000 00000 00000 000010
28  move	$v0,	$a0		#n<=1
   000000 00100 00000 00010 00000 100000
2c  j	    Return
   000010 00000 00000 00000 00000 010110

   True:
30 addi	$a0,	$a0,	-1	#n>1
   001000 00100 00100 11111 11111 111111
34   jal	    Fibonacci		#fibonacci(n-1)
   000011 00000 00000 00000 00000 000100
38 addi	$sp,	$sp,	-4	#shelter of return value
   001000 11101 11101 11111 11111 111100
3c   sw	    $v0,	0($sp)
   101011 11101 00010 00000 00000 000000
40   addi	$a0,	$a0,	-1
   001000 00100 00100 11111 11111 111111
44   jal	    Fibonacci		#fibonacci(n-2)
   000011 00000 00000 00000 00000 000100
48   lw	    $s0,	0($sp)		#restore of return value
   100011 11101 10000 00000 00000 000000
4c   addi	$sp,	$sp,	4
   001000 11101 11101 00000 00000 000100
50   add	    $v0,	$v0,	$s0	#fibonacci(n-1) + fibonacci(n-2)
   000000 00010 10000 00010 00000 100000
54    j	    Return
   000010 00000 00000 00000 00000 010110

   Return:
58 lw	    $ra,	0($sp)		#shelter of registers
   100011 11101 11111 00000 00000 000000
5c lw	    $a0,	4($sp)
   100011 11101 00100 00000 00000 000100
60 addi	$sp,	$sp,	8
   001000 11101 11101 00000 00000 001000
64  jr	    $ra
   000000 11111 00000 11111 00000 001000

   Exit:
68 addi    $v0,    $v0,    0
   001000 00010 00010 00000 00000 000000
6c None
   000000 00000 00000 00000 00000 000000
